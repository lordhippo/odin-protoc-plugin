name: Build

permissions:
  contents: write

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

jobs:
  matrix-prep:
    runs-on: ubuntu-latest
    steps:
      - id: linux
        run: echo "os=ubuntu-latest" >> $GITHUB_OUTPUT
      - id: windows
        run: echo "os=windows-latest" >> $GITHUB_OUTPUT
      - id: macos
        run: echo "os=macos-latest" >> $GITHUB_OUTPUT
    outputs:
      os: ${{ toJSON(steps.*.outputs.os) }}

  build:
    name: ${{ matrix.preset }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    needs:
      - matrix-prep

    strategy:
      fail-fast: false
      matrix:
        os: ${{ fromJSON(needs.matrix-prep.outputs.os) }}
        preset: [linux-debug, macos-debug, windows-debug, windows-release]
        exclude:
          - os: ubuntu-latest
            preset: macos-debug
          - os: ubuntu-latest
            preset: windows-debug
          - os: ubuntu-latest
            preset: windows-release

          - os: macos-latest
            preset: linux-debug
          - os: macos-latest
            preset: windows-debug
          - os: macos-latest
            preset: windows-release

          - os: windows-latest
            preset: linux-debug
          - os: windows-latest
            preset: macos-debug

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install system packages
        uses: ConorMacBride/install-package@v1
        with:
          brew: pkg-config

      - name: Install CMake
        uses: lukka/get-cmake@latest

      - name: Setup vcpkg
        uses:
          lukka/run-vcpkg@v11
        with:
          vcpkgDirectory: "${{ github.workspace }}/vcpkg"

      - name: Build
        uses: lukka/run-cmake@v10
        with:
          configurePreset: ${{ matrix.preset }}
          buildPreset: ${{ matrix.preset }}
          packagePreset: ${{ matrix.preset }}
        env:
          PACKAGE_NAME: "odin-protoc-plugin" # get this from the repo name
          PACKAGE_VERSION: ${{ github.ref_name }}
          PACKAGE_SYSTEM: ${{ matrix.preset }}

      - name: Release
        uses: softprops/action-gh-release@v0.1.15
        # remove before the final submission
        # if: startsWith(github.ref, 'refs/tags/v')
        with:
          draft: true
          files: "out/build/${{ matrix.preset }}/package/*.zip"
          fail_on_unmatched_files: true
          generate_release_notes: true
          # remove before the final submission
          tag_name: "v.test"
